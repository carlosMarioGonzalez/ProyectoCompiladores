
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'AUXNEG AUXNEG3 SUBJECT UNKNOWN VERB_Contpast VERB_FUTURO VERB_Spast VERB_Spresent VERB_pastToBe WORDtexto : frase_presenteSimple textotexto : frase_presenteSimpleNeg textotexto : frase_pasadoSimple textotexto : frase_pasadoContinuo textotexto : frase_futurosimple textotexto : emptyfrase_presenteSimple : SUBJECT VERB_Spresent predicatedfrase_presenteSimple : SUBJECT VERB_Spresent predicated frase_presenteSimplefrase_presenteSimpleNeg : SUBJECT AUXNEG VERB_Spresent predicatedfrase_presenteSimpleNeg : SUBJECT AUXNEG3 VERB_Spresent predicatedfrase_pasadoContinuo : SUBJECT VERB_pastToBe VERB_Contpast predicatedfrase_pasadoSimple : SUBJECT VERB_Spast predicatedfrase_futurosimple : SUBJECT VERB_FUTURO predicatedpredicated : WORDOPT predicatedpredicated : WORDOPTWORDOPT : WORDWORDOPT : emptyempty :'
    
_lr_action_items = {'SUBJECT':([0,2,3,4,5,6,14,17,19,20,21,22,23,24,25,26,27,28,30,31,32,33,34,],[8,8,8,8,8,8,-18,-18,-18,29,-15,-16,-17,-18,-18,-12,-18,-13,-8,-14,-9,-10,-11,]),'$end':([0,1,2,3,4,5,6,7,9,10,11,12,13,14,17,19,20,21,22,23,24,25,26,27,28,30,31,32,33,34,],[-18,0,-18,-18,-18,-18,-18,-6,-1,-2,-3,-4,-5,-18,-18,-18,-7,-15,-16,-17,-18,-18,-12,-18,-13,-8,-14,-9,-10,-11,]),'VERB_Spresent':([8,15,16,29,],[14,24,25,14,]),'AUXNEG':([8,],[15,]),'AUXNEG3':([8,],[16,]),'VERB_Spast':([8,],[17,]),'VERB_pastToBe':([8,],[18,]),'VERB_FUTURO':([8,],[19,]),'WORD':([14,17,19,21,22,23,24,25,27,],[22,22,22,22,-16,-17,22,22,22,]),'VERB_Contpast':([18,],[27,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'texto':([0,2,3,4,5,6,],[1,9,10,11,12,13,]),'frase_presenteSimple':([0,2,3,4,5,6,20,],[2,2,2,2,2,2,30,]),'frase_presenteSimpleNeg':([0,2,3,4,5,6,],[3,3,3,3,3,3,]),'frase_pasadoSimple':([0,2,3,4,5,6,],[4,4,4,4,4,4,]),'frase_pasadoContinuo':([0,2,3,4,5,6,],[5,5,5,5,5,5,]),'frase_futurosimple':([0,2,3,4,5,6,],[6,6,6,6,6,6,]),'empty':([0,2,3,4,5,6,14,17,19,21,24,25,27,],[7,7,7,7,7,7,23,23,23,23,23,23,23,]),'predicated':([14,17,19,21,24,25,27,],[20,26,28,31,32,33,34,]),'WORDOPT':([14,17,19,21,24,25,27,],[21,21,21,21,21,21,21,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> texto","S'",1,None,None,None),
  ('texto -> frase_presenteSimple texto','texto',2,'p_textoSP','TraductorTypes.py',79),
  ('texto -> frase_presenteSimpleNeg texto','texto',2,'p_textoSPnot','TraductorTypes.py',83),
  ('texto -> frase_pasadoSimple texto','texto',2,'p_textoSPast','TraductorTypes.py',87),
  ('texto -> frase_pasadoContinuo texto','texto',2,'p_textoPastCont','TraductorTypes.py',91),
  ('texto -> frase_futurosimple texto','texto',2,'p_textoPastfuturo','TraductorTypes.py',95),
  ('texto -> empty','texto',1,'p_textoOPT','TraductorTypes.py',99),
  ('frase_presenteSimple -> SUBJECT VERB_Spresent predicated','frase_presenteSimple',3,'p_Frase_SP','TraductorTypes.py',103),
  ('frase_presenteSimple -> SUBJECT VERB_Spresent predicated frase_presenteSimple','frase_presenteSimple',4,'p_Frase_SP_compuesta','TraductorTypes.py',109),
  ('frase_presenteSimpleNeg -> SUBJECT AUXNEG VERB_Spresent predicated','frase_presenteSimpleNeg',4,'p_Frase_SPNeg','TraductorTypes.py',114),
  ('frase_presenteSimpleNeg -> SUBJECT AUXNEG3 VERB_Spresent predicated','frase_presenteSimpleNeg',4,'p_Frase_SPNeg3','TraductorTypes.py',118),
  ('frase_pasadoContinuo -> SUBJECT VERB_pastToBe VERB_Contpast predicated','frase_pasadoContinuo',4,'p_Frase_PastCont','TraductorTypes.py',122),
  ('frase_pasadoSimple -> SUBJECT VERB_Spast predicated','frase_pasadoSimple',3,'p_Frase_SPast','TraductorTypes.py',126),
  ('frase_futurosimple -> SUBJECT VERB_FUTURO predicated','frase_futurosimple',3,'p_Frase_futuro','TraductorTypes.py',131),
  ('predicated -> WORDOPT predicated','predicated',2,'p_Predicado','TraductorTypes.py',135),
  ('predicated -> WORDOPT','predicated',1,'p_Predicado_Word','TraductorTypes.py',139),
  ('WORDOPT -> WORD','WORDOPT',1,'p_Word_Opt1','TraductorTypes.py',143),
  ('WORDOPT -> empty','WORDOPT',1,'p_Word_OptE','TraductorTypes.py',147),
  ('empty -> <empty>','empty',0,'p_empty','TraductorTypes.py',151),
]
